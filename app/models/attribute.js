const mongoose = require('mongoose')
const Schema = mongoose.Schema

const AttributeSchema = new Schema({

  ////
  // APPLICATION CONVENTION
  ////

  // SYS_LABEL is an expression in nature, in order to show the entity in frontend.
  // It consits of other attributes in the entity, for example, the SYS_LABEL of 
  // sample entity should be the `${SN}`
  SYS_LABEL: {
    type: String,
    required: true,
    trim: true,
  },

  // SYS_ID is generated by the Genre of entity and the SYS_CODE
  // Normally, SYS_ID = Genre + SYS_CODE, if there's a tailing slash in the Genre.
  // It should be generated automatically, and only expose the SYS_CODE to end user.
  SYS_IDENTIFIER: {
    type: String,
    match: /^\/[a-zA-Z0-9_\/]*$/,
    required: true,
    trim: true,
    unique: true, // unique and index
  },

  ////
  // PRESET FUNCTION ATTRIBUTES
  ////

  createdAt: {
    type: Date,
    default: Date.now
  },

  updatedAt: {
    type: Date,
  },

  enable: {
    type: Boolean,
    default: true,
  },

  visible: {
    type: Boolean,
    default: true,
  },

  deleted: {
    type: Boolean,
    default: false,
  }

}, {strict: false})

// SYS_CODE is used to match unique attributes for entities
// e.g., EXTRACT_COMPLETE_DATE.
AttributeSchema
  .virtual('SYS_CODE')
  .get(function(){
    // e.g.
    // 1. SYS_IDENTIFIER = "/WORKCENTER/PRODUCT/TEST/V1/17R00221", -> "17R00221"
    // 2. SYS_IDENTIFIER = "/WORKCENTER/PRODUCT/TEST/V1/", -> ""
    if (this.SYS_IDENTIFIER) {
      elements = this.SYS_IDENTIFIER.split("/")
      return elements[elements.length - 1]
    } else {
      return ""
    }
  })

// SYS_GENRE_IDENTIFIER is used to get the attribute list from genre collection
// But not works fine for the sub object
// TODO: sub object works like the split ape to flac in the same folder
//       try to use other perimeter like "-"
AttributeSchema
  .virtual('SYS_GENRE_IDENTIFIER')
  .get(function(){
    // e.g.
    // 1. SYS_IDENTIFIER = "/WORKCENTER/PRODUCT/TEST/V1/17R00221",
    //    -> "/WORKCENTER/PRODUCT/TEST/V1/"
    // 2. SYS_IDENTIFIER = "/WORKCENTER/PRODUCT/TEST/V1/",
    //    -> "/WORKCENTER/PRODUCT/TEST/V1/"
    if (this.SYS_IDENTIFIER){
      return this.SYS_IDENTIFIER.substr(0,this.SYS_IDENTIFIER.lastIndexOf("/")+1)
    } else{
      return ""
    }

  })

AttributeSchema.set(
  'toJSON', 
  {getters: true},
  {virtuals: true})

mongoose.model('Attribute', AttributeSchema)
